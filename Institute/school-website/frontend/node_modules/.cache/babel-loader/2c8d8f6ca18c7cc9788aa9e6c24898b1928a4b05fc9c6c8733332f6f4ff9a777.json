{"ast":null,"code":"var _jsxFileName = \"/Users/360infotech/Desktop/Practice/Institute/school-website/frontend/src/components/auth/ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole = null\n}) => {\n  _s();\n  const location = useLocation();\n  const {\n    isAuthenticated,\n    user,\n    loading\n  } = useSelector(state => state.auth);\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        size: \"lg\",\n        text: \"Checking authentication...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check role-based access\n  if (requiredRole && (user === null || user === void 0 ? void 0 : user.role) !== requiredRole) {\n    // Redirect to appropriate dashboard based on user role\n    const roleDashboards = {\n      admin: '/admin',\n      teacher: '/teacher',\n      student: '/student'\n    };\n    const redirectPath = roleDashboards[user === null || user === void 0 ? void 0 : user.role] || '/dashboard';\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: redirectPath,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"nXHT/yuTOjyQG9N4VzffW5MeZbQ=\", false, function () {\n  return [useLocation, useSelector];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useSelector","LoadingSpinner","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","_s","location","isAuthenticated","user","loading","state","auth","className","size","text","fileName","_jsxFileName","lineNumber","columnNumber","to","from","replace","role","roleDashboards","admin","teacher","student","redirectPath","_c","$RefreshReg$"],"sources":["/Users/360infotech/Desktop/Practice/Institute/school-website/frontend/src/components/auth/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport LoadingSpinner from '../common/LoadingSpinner';\n\nconst ProtectedRoute = ({ children, requiredRole = null }) => {\n  const location = useLocation();\n  const { isAuthenticated, user, loading } = useSelector(state => state.auth);\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900\">\n        <LoadingSpinner size=\"lg\" text=\"Checking authentication...\" />\n      </div>\n    );\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // Check role-based access\n  if (requiredRole && user?.role !== requiredRole) {\n    // Redirect to appropriate dashboard based on user role\n    const roleDashboards = {\n      admin: '/admin',\n      teacher: '/teacher',\n      student: '/student'\n    };\n    \n    const redirectPath = roleDashboards[user?.role] || '/dashboard';\n    return <Navigate to={redirectPath} replace />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,cAAc,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,YAAY,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU,eAAe;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;;EAE3E;EACA,IAAIF,OAAO,EAAE;IACX,oBACER,OAAA;MAAKW,SAAS,EAAC,2EAA2E;MAAAT,QAAA,eACxFF,OAAA,CAACF,cAAc;QAACc,IAAI,EAAC,IAAI;QAACC,IAAI,EAAC;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAEV;;EAEA;EACA,IAAI,CAACX,eAAe,EAAE;IACpB,oBAAON,OAAA,CAACL,QAAQ;MAACuB,EAAE,EAAC,QAAQ;MAACT,KAAK,EAAE;QAAEU,IAAI,EAAEd;MAAS,CAAE;MAACe,OAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,IAAId,YAAY,IAAI,CAAAI,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEc,IAAI,MAAKlB,YAAY,EAAE;IAC/C;IACA,MAAMmB,cAAc,GAAG;MACrBC,KAAK,EAAE,QAAQ;MACfC,OAAO,EAAE,UAAU;MACnBC,OAAO,EAAE;IACX,CAAC;IAED,MAAMC,YAAY,GAAGJ,cAAc,CAACf,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEc,IAAI,CAAC,IAAI,YAAY;IAC/D,oBAAOrB,OAAA,CAACL,QAAQ;MAACuB,EAAE,EAAEQ,YAAa;MAACN,OAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC/C;EAEA,OAAOf,QAAQ;AACjB,CAAC;AAACE,EAAA,CAhCIH,cAAc;EAAA,QACDL,WAAW,EACeC,WAAW;AAAA;AAAA8B,EAAA,GAFlD1B,cAAc;AAkCpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}