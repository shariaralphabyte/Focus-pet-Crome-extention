{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './slices/authSlice';\nimport noticeReducer from './slices/noticeSlice';\nimport teacherReducer from './slices/teacherSlice';\nimport studentReducer from './slices/studentSlice';\nimport institutionReducer from './slices/institutionSlice';\nimport galleryReducer from './slices/gallerySlice';\nimport managementCommitteeReducer from './slices/managementCommitteeSlice';\nimport routineReducer from './slices/routineSlice';\nimport resultReducer from './slices/resultSlice';\nimport syllabusReducer from './slices/syllabusSlice';\nimport eventReducer from './slices/eventSlice';\nimport contentReducer from './slices/contentSlice';\nimport themeReducer from './slices/themeSlice';\nimport uiReducer from './slices/uiSlice';\nimport classReducer from './slices/classSlice';\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    notices: noticeReducer,\n    teachers: teacherReducer,\n    students: studentReducer,\n    institution: institutionReducer,\n    gallery: galleryReducer,\n    managementCommittee: managementCommitteeReducer,\n    routines: routineReducer,\n    results: resultReducer,\n    syllabus: syllabusReducer,\n    events: eventReducer,\n    content: contentReducer,\n    theme: themeReducer,\n    ui: uiReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE']\n    }\n  }),\n  devTools: process.env.NODE_ENV !== 'production'\n});\n\n// TypeScript type definitions would go here if this was a .ts file\n// export type RootState = ReturnType<typeof store.getState>;\n// export type AppDispatch = typeof store.dispatch;","map":{"version":3,"names":["configureStore","authReducer","noticeReducer","teacherReducer","studentReducer","institutionReducer","galleryReducer","managementCommitteeReducer","routineReducer","resultReducer","syllabusReducer","eventReducer","contentReducer","themeReducer","uiReducer","classReducer","store","reducer","auth","notices","teachers","students","institution","gallery","managementCommittee","routines","results","syllabus","events","content","theme","ui","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","devTools","process","env","NODE_ENV"],"sources":["/Users/360infotech/Desktop/Practice/Institute/school-website/frontend/src/store/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './slices/authSlice';\nimport noticeReducer from './slices/noticeSlice';\nimport teacherReducer from './slices/teacherSlice';\nimport studentReducer from './slices/studentSlice';\nimport institutionReducer from './slices/institutionSlice';\nimport galleryReducer from './slices/gallerySlice';\nimport managementCommitteeReducer from './slices/managementCommitteeSlice';\nimport routineReducer from './slices/routineSlice';\nimport resultReducer from './slices/resultSlice';\nimport syllabusReducer from './slices/syllabusSlice';\nimport eventReducer from './slices/eventSlice';\nimport contentReducer from './slices/contentSlice';\nimport themeReducer from './slices/themeSlice';\nimport uiReducer from './slices/uiSlice';\nimport classReducer from './slices/classSlice';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    notices: noticeReducer,\n    teachers: teacherReducer,\n    students: studentReducer,\n    institution: institutionReducer,\n    gallery: galleryReducer,\n    managementCommittee: managementCommitteeReducer,\n    routines: routineReducer,\n    results: resultReducer,\n    syllabus: syllabusReducer,\n    events: eventReducer,\n    content: contentReducer,\n    theme: themeReducer,\n    ui: uiReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE'],\n      },\n    }),\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\n// TypeScript type definitions would go here if this was a .ts file\n// export type RootState = ReturnType<typeof store.getState>;\n// export type AppDispatch = typeof store.dispatch;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,kBAAkB,MAAM,2BAA2B;AAC1D,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,0BAA0B,MAAM,mCAAmC;AAC1E,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,eAAe,MAAM,wBAAwB;AACpD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,YAAY,MAAM,qBAAqB;AAE9C,OAAO,MAAMC,KAAK,GAAGhB,cAAc,CAAC;EAClCiB,OAAO,EAAE;IACPC,IAAI,EAAEjB,WAAW;IACjBkB,OAAO,EAAEjB,aAAa;IACtBkB,QAAQ,EAAEjB,cAAc;IACxBkB,QAAQ,EAAEjB,cAAc;IACxBkB,WAAW,EAAEjB,kBAAkB;IAC/BkB,OAAO,EAAEjB,cAAc;IACvBkB,mBAAmB,EAAEjB,0BAA0B;IAC/CkB,QAAQ,EAAEjB,cAAc;IACxBkB,OAAO,EAAEjB,aAAa;IACtBkB,QAAQ,EAAEjB,eAAe;IACzBkB,MAAM,EAAEjB,YAAY;IACpBkB,OAAO,EAAEjB,cAAc;IACvBkB,KAAK,EAAEjB,YAAY;IACnBkB,EAAE,EAAEjB;EACN,CAAC;EACDkB,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC,iBAAiB,EAAE,mBAAmB;IACzD;EACF,CAAC,CAAC;EACJC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACrC,CAAC,CAAC;;AAEF;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}