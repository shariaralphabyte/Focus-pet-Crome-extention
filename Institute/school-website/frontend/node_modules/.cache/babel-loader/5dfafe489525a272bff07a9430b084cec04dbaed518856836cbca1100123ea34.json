{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\n// Get initial theme from localStorage or system preference\nconst getInitialTheme = () => {\n  const savedTheme = localStorage.getItem('theme');\n  if (savedTheme) {\n    return savedTheme;\n  }\n\n  // Check system preference\n  if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n    return 'dark';\n  }\n  return 'light';\n};\n\n// Apply theme to document\nconst applyTheme = theme => {\n  const root = document.documentElement;\n  if (theme === 'dark') {\n    root.classList.add('dark');\n  } else {\n    root.classList.remove('dark');\n  }\n  localStorage.setItem('theme', theme);\n};\nconst initialState = {\n  mode: getInitialTheme(),\n  primaryColor: localStorage.getItem('primaryColor') || 'blue',\n  fontSize: localStorage.getItem('fontSize') || 'medium',\n  sidebarCollapsed: JSON.parse(localStorage.getItem('sidebarCollapsed') || 'false'),\n  animations: JSON.parse(localStorage.getItem('animations') || 'true')\n};\n\n// Apply initial theme\napplyTheme(initialState.mode);\nconst themeSlice = createSlice({\n  name: 'theme',\n  initialState,\n  reducers: {\n    toggleTheme: state => {\n      state.mode = state.mode === 'light' ? 'dark' : 'light';\n      applyTheme(state.mode);\n    },\n    setTheme: (state, action) => {\n      state.mode = action.payload;\n      applyTheme(state.mode);\n    },\n    setPrimaryColor: (state, action) => {\n      state.primaryColor = action.payload;\n      localStorage.setItem('primaryColor', action.payload);\n\n      // Apply CSS custom properties for primary color\n      const root = document.documentElement;\n      const colors = {\n        blue: '#3b82f6',\n        green: '#22c55e',\n        purple: '#8b5cf6',\n        red: '#ef4444',\n        orange: '#f97316',\n        pink: '#ec4899',\n        indigo: '#6366f1',\n        teal: '#14b8a6'\n      };\n      if (colors[action.payload]) {\n        root.style.setProperty('--color-primary', colors[action.payload]);\n      }\n    },\n    setFontSize: (state, action) => {\n      state.fontSize = action.payload;\n      localStorage.setItem('fontSize', action.payload);\n\n      // Apply font size to document\n      const root = document.documentElement;\n      const sizes = {\n        small: '14px',\n        medium: '16px',\n        large: '18px',\n        xlarge: '20px'\n      };\n      if (sizes[action.payload]) {\n        root.style.setProperty('--base-font-size', sizes[action.payload]);\n      }\n    },\n    toggleSidebar: state => {\n      state.sidebarCollapsed = !state.sidebarCollapsed;\n      localStorage.setItem('sidebarCollapsed', JSON.stringify(state.sidebarCollapsed));\n    },\n    setSidebarCollapsed: (state, action) => {\n      state.sidebarCollapsed = action.payload;\n      localStorage.setItem('sidebarCollapsed', JSON.stringify(action.payload));\n    },\n    toggleAnimations: state => {\n      state.animations = !state.animations;\n      localStorage.setItem('animations', JSON.stringify(state.animations));\n\n      // Apply animations preference\n      const root = document.documentElement;\n      if (state.animations) {\n        root.classList.remove('no-animations');\n      } else {\n        root.classList.add('no-animations');\n      }\n    },\n    setAnimations: (state, action) => {\n      state.animations = action.payload;\n      localStorage.setItem('animations', JSON.stringify(action.payload));\n\n      // Apply animations preference\n      const root = document.documentElement;\n      if (action.payload) {\n        root.classList.remove('no-animations');\n      } else {\n        root.classList.add('no-animations');\n      }\n    },\n    resetTheme: state => {\n      state.mode = 'light';\n      state.primaryColor = 'blue';\n      state.fontSize = 'medium';\n      state.sidebarCollapsed = false;\n      state.animations = true;\n\n      // Clear localStorage\n      localStorage.removeItem('theme');\n      localStorage.removeItem('primaryColor');\n      localStorage.removeItem('fontSize');\n      localStorage.removeItem('sidebarCollapsed');\n      localStorage.removeItem('animations');\n\n      // Apply defaults\n      applyTheme('light');\n      const root = document.documentElement;\n      root.style.setProperty('--color-primary', '#3b82f6');\n      root.style.setProperty('--base-font-size', '16px');\n      root.classList.remove('no-animations');\n    }\n  }\n});\nexport const {\n  toggleTheme,\n  setTheme,\n  setPrimaryColor,\n  setFontSize,\n  toggleSidebar,\n  setSidebarCollapsed,\n  toggleAnimations,\n  setAnimations,\n  resetTheme\n} = themeSlice.actions;\n\n// Selectors\nexport const selectTheme = state => state.theme;\nexport const selectThemeMode = state => state.theme.mode;\nexport const selectPrimaryColor = state => state.theme.primaryColor;\nexport const selectFontSize = state => state.theme.fontSize;\nexport const selectSidebarCollapsed = state => state.theme.sidebarCollapsed;\nexport const selectAnimations = state => state.theme.animations;\nexport const selectIsDarkMode = state => state.theme.mode === 'dark';\nexport default themeSlice.reducer;","map":{"version":3,"names":["createSlice","getInitialTheme","savedTheme","localStorage","getItem","window","matchMedia","matches","applyTheme","theme","root","document","documentElement","classList","add","remove","setItem","initialState","mode","primaryColor","fontSize","sidebarCollapsed","JSON","parse","animations","themeSlice","name","reducers","toggleTheme","state","setTheme","action","payload","setPrimaryColor","colors","blue","green","purple","red","orange","pink","indigo","teal","style","setProperty","setFontSize","sizes","small","medium","large","xlarge","toggleSidebar","stringify","setSidebarCollapsed","toggleAnimations","setAnimations","resetTheme","removeItem","actions","selectTheme","selectThemeMode","selectPrimaryColor","selectFontSize","selectSidebarCollapsed","selectAnimations","selectIsDarkMode","reducer"],"sources":["/Users/360infotech/Desktop/Practice/Institute/school-website/frontend/src/store/slices/themeSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n// Get initial theme from localStorage or system preference\nconst getInitialTheme = () => {\n  const savedTheme = localStorage.getItem('theme');\n  if (savedTheme) {\n    return savedTheme;\n  }\n  \n  // Check system preference\n  if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n    return 'dark';\n  }\n  \n  return 'light';\n};\n\n// Apply theme to document\nconst applyTheme = (theme) => {\n  const root = document.documentElement;\n  \n  if (theme === 'dark') {\n    root.classList.add('dark');\n  } else {\n    root.classList.remove('dark');\n  }\n  \n  localStorage.setItem('theme', theme);\n};\n\nconst initialState = {\n  mode: getInitialTheme(),\n  primaryColor: localStorage.getItem('primaryColor') || 'blue',\n  fontSize: localStorage.getItem('fontSize') || 'medium',\n  sidebarCollapsed: JSON.parse(localStorage.getItem('sidebarCollapsed') || 'false'),\n  animations: JSON.parse(localStorage.getItem('animations') || 'true'),\n};\n\n// Apply initial theme\napplyTheme(initialState.mode);\n\nconst themeSlice = createSlice({\n  name: 'theme',\n  initialState,\n  reducers: {\n    toggleTheme: (state) => {\n      state.mode = state.mode === 'light' ? 'dark' : 'light';\n      applyTheme(state.mode);\n    },\n    setTheme: (state, action) => {\n      state.mode = action.payload;\n      applyTheme(state.mode);\n    },\n    setPrimaryColor: (state, action) => {\n      state.primaryColor = action.payload;\n      localStorage.setItem('primaryColor', action.payload);\n      \n      // Apply CSS custom properties for primary color\n      const root = document.documentElement;\n      const colors = {\n        blue: '#3b82f6',\n        green: '#22c55e',\n        purple: '#8b5cf6',\n        red: '#ef4444',\n        orange: '#f97316',\n        pink: '#ec4899',\n        indigo: '#6366f1',\n        teal: '#14b8a6',\n      };\n      \n      if (colors[action.payload]) {\n        root.style.setProperty('--color-primary', colors[action.payload]);\n      }\n    },\n    setFontSize: (state, action) => {\n      state.fontSize = action.payload;\n      localStorage.setItem('fontSize', action.payload);\n      \n      // Apply font size to document\n      const root = document.documentElement;\n      const sizes = {\n        small: '14px',\n        medium: '16px',\n        large: '18px',\n        xlarge: '20px',\n      };\n      \n      if (sizes[action.payload]) {\n        root.style.setProperty('--base-font-size', sizes[action.payload]);\n      }\n    },\n    toggleSidebar: (state) => {\n      state.sidebarCollapsed = !state.sidebarCollapsed;\n      localStorage.setItem('sidebarCollapsed', JSON.stringify(state.sidebarCollapsed));\n    },\n    setSidebarCollapsed: (state, action) => {\n      state.sidebarCollapsed = action.payload;\n      localStorage.setItem('sidebarCollapsed', JSON.stringify(action.payload));\n    },\n    toggleAnimations: (state) => {\n      state.animations = !state.animations;\n      localStorage.setItem('animations', JSON.stringify(state.animations));\n      \n      // Apply animations preference\n      const root = document.documentElement;\n      if (state.animations) {\n        root.classList.remove('no-animations');\n      } else {\n        root.classList.add('no-animations');\n      }\n    },\n    setAnimations: (state, action) => {\n      state.animations = action.payload;\n      localStorage.setItem('animations', JSON.stringify(action.payload));\n      \n      // Apply animations preference\n      const root = document.documentElement;\n      if (action.payload) {\n        root.classList.remove('no-animations');\n      } else {\n        root.classList.add('no-animations');\n      }\n    },\n    resetTheme: (state) => {\n      state.mode = 'light';\n      state.primaryColor = 'blue';\n      state.fontSize = 'medium';\n      state.sidebarCollapsed = false;\n      state.animations = true;\n      \n      // Clear localStorage\n      localStorage.removeItem('theme');\n      localStorage.removeItem('primaryColor');\n      localStorage.removeItem('fontSize');\n      localStorage.removeItem('sidebarCollapsed');\n      localStorage.removeItem('animations');\n      \n      // Apply defaults\n      applyTheme('light');\n      \n      const root = document.documentElement;\n      root.style.setProperty('--color-primary', '#3b82f6');\n      root.style.setProperty('--base-font-size', '16px');\n      root.classList.remove('no-animations');\n    },\n  },\n});\n\nexport const {\n  toggleTheme,\n  setTheme,\n  setPrimaryColor,\n  setFontSize,\n  toggleSidebar,\n  setSidebarCollapsed,\n  toggleAnimations,\n  setAnimations,\n  resetTheme,\n} = themeSlice.actions;\n\n// Selectors\nexport const selectTheme = (state) => state.theme;\nexport const selectThemeMode = (state) => state.theme.mode;\nexport const selectPrimaryColor = (state) => state.theme.primaryColor;\nexport const selectFontSize = (state) => state.theme.fontSize;\nexport const selectSidebarCollapsed = (state) => state.theme.sidebarCollapsed;\nexport const selectAnimations = (state) => state.theme.animations;\nexport const selectIsDarkMode = (state) => state.theme.mode === 'dark';\n\nexport default themeSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}